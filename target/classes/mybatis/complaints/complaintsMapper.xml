<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.smallanimals.complaints">
	
	<resultMap type="com.smallanimals.complaints.vo.ComplaintsVO" id="complaints">
		<result column="complaintsId" property="no"/>
		<result column="complaintsTitle" property="title" />
		<result column="complaintsContent" property="content"/>
		<result column="complaintsWriter" property="writer"/>
		<result column="complaintsWriteDate" property="writeDate"/>
		<result column="complaintsHit" property="hit"/>
	</resultMap>
	
	<select id="list" parameterType="com.smallanimals.complaints.vo.ComplaintsVO" resultMap="complaints">
		SELECT *, (SELECT COUNT(*) FROM complaints c INNER JOIN ReplyComplaints rc ON c.complaintsId = rc.complaintsId) AS replycnt
		FROM complaints c
		LEFT JOIN complaintsResult cr ON c.complaintsResult = cr.`NO`
		order by complaintsId desc
	</select>
	<!-- null이나 colmuns의 타입이 다를 경우 , jdbcType=type 사용해서 타입을 지정해주거나 변환해준다. -->
	<select id="view" resultMap="complaints">
		SELECT c.*, cr.result
		FROM complaints c INNER JOIN complaintsResult cr ON c.complaintsResult = cr.`NO`
		WHERE complaintsId = #{no}
	</select>
	
	<insert id="insert">
		insert into complaints(complaintsTitle, complaintsContent, complaintsWriter)
		VALUES(#{title}, #{content}, #{writer});
	</insert>
	
	<update id="update">
		update complaints set complainsTitle = #{title}, complainsContent = #{content}, complainsWriter = #{writer}
		where complaintsId = #{no}
	</update>
	
	<delete id="delete">
		delete from complaints where complaintsId = #{no}
	</delete>
	
	<select id="count">
		select count(complaintsId) from complaints;
	</select>
	
	<update id="result">
		update complaints set complaintsResult = #{result}
	</update>
	
	<insert id="like">
		insert into ReplyComplaintsLike(replyComplaiantsId, ReplyLikeUid)
		values(#{replyno}, #{replyUid}) 
	</insert>
	
	<select id="replyList">
		select *
		from ReplyComplaints
	</select>
	
	<insert id="replyInsert">
		insert into ReplyComplaints(complaintsId, replyComplaintsWriter, replyComplaintsContent)
		values(#{no}, #{replyWriter}, #{replyContent})
	</insert>
	
	<update id="replyUpdate">
		update ReplyComplaints set replyComplaintsWriter = #{replyWriter}, replyComplaintsContent = #{replyContent}
		where  replyComplaintsId = #{replyNo}
	</update>
	
	<delete id="replyDelete">
		delete from ReplyComplaints
		where replyComplaintsId = #{replyNo}
	</delete>
	
	
</mapper>